/*
Instituto Tecnol贸gico de Costa Rica
Esto corresponde al Parser del compilador e.e

Nombre archivo: parser.cup
Para crear: java java_cup.Main ycalc.cup
            el .jar de cup debe estar en el mismo directorio

Manual de cup http://www.cs.princeton.edu/~appel/modern/java/CUP/manual.html#intro
 ver el archivo ycal.cup en jflex... examples

para compilar:
java -jar java-cup-11a.jar -interface -parser Parser parser_1.cup

Ejemplos: http://www2.cs.tum.edu/projects/cup/examples.php

*/

// Se requiere de la clase java_cup.runtime.* 
import java_cup.runtime.*;
import proyectocompi.scanner.Scanning;

/*------------- C贸digo del Parser -------------*/

/* conexion del parser al scanner */
parser code {: 
    public Scanning s;
    public Parser(Scanning s) {this.s=s;}
:}
/* Conexion al scanner */
init with {: s.init(); :};
scan with {: return s.nextToken(); :};

/*------------- Declaraci贸n de los Terminales y No Terminales ------------- */

terminal PLUS, MINUS, LPAREN, RPAREN, EQUAL, CLASS, def, INT, FLOAT, list, STRING,
         BOOLEAN, CHAR, WHILE, FOR, IN, RANGE, IF, ELIF, ELSE, TRY, CATCH,
         FINALLY, identificador;

non terminal archivo_codigo, funciones, variables, programa_principal, 
             bloque_codigo, parametros, bloque_funcion,
             bloque, expression, condicion, asignacion, while_stmt,
             for_stmt, if_stmt, elif_stmt, else_stmt, try_stmt, 
             finally_stmt, metodos, var_globales;


/*------------- Declaraci贸n de Precedencia y Asociatividad -------------*/
/*
archivo_codigo ::= funciones variables programa_principal 
                     | CLASS identificador : variables metodos var_globales programa_principal ;*/

//funciones ::= def identificador LPAREN parametros RPAREN: variables  bloque_funcion;

funciones ::= def identificador;


/* faltan los demas tipos de variables y el enter o terminador *//*
variables ::= INT identificador variables 
               |FLOAT identificador variables
               |list identificador variables
               |STRING identificador variables
               |BOOLEAN identificador variables
               |CHAR identificador variables ;*/
/*
asignacion ::= identificador EQUAL expression ;
*/
/*----- ciclos -----*/
/*
while_stmt ::= WHILE condicion : bloque;

for_stmt ::= FOR identificador IN RANGE LPAREN expression RPAREN : bloque ;*/

/*----- IF -----*/
/*
if_stmt ::= IF expression : 
                bloque
              elif_stmt
              else_stmt ;

elif_stmt ::= ELIF expression :
                  bloque
                | ;

else_stmt ::= ELSE: bloque 
                | ;
*/
/*----- TRY-CATCH -----*/
/*
try_stmt ::= TRY : bloque CATCH identificador : bloque finally_stmt;

finally_stmt ::= FINALLY: bloque 
                   |;
*/
/* Al final del bloque tiene que haber un ; */
/* def ERROR :
   def ERROR ( ):
   def id ERROR:

    el error del ;

 */